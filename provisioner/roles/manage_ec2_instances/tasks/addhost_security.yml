- name: MANAGE SPLUNK EC2 INSTANCES
  when: security_console == 'splunk'
  block:
    - name: grab facts for splunknode (SECURITY MODE)
      ec2_instance_facts:
        region: "{{ ec2_region }}"
        filters:
          instance-state-name: running
          "tag:Workshop_splunk": "{{ec2_name_prefix}}-splunk"
      register: splunk_node_facts

    - name: ADD SPLUNK NODE TO INVENTORY
      add_host:
        name: "{{ item.tags.Name }}"
        short_name: "{{ item.tags.short_name }}"
        ansible_host: "{{ item.public_ip_address }}"
        username: "{{ item.tags.Student }}"
        ansible_user: "{{ item.tags.username }}"
        ansible_port: "{{ ssh_port }}"
        ansible_ssh_private_key_file: "{{ playbook_dir }}/{{ec2_name_prefix}}/{{ec2_name_prefix}}-private.pem"
        private_ip: "{{item.private_ip_address}}"
        groups:
          - splunk
          - siem
      loop: "{{ splunk_node_facts.instances|flatten(levels=1) }}"

- name: MANAGE QRADAR EC2 INSTANCES
  when: security_console == 'qradar'
  block:
    - name: grab facts for qradarnode (SECURITY MODE)
      ec2_instance_facts:
        region: "{{ ec2_region }}"
        filters:
          instance-state-name: running
          "tag:Workshop_qradar": "{{ec2_name_prefix}}-qradar"
      register: qradar_node_facts

    - name: ADD QRADAR NODE TO INVENTORY
      add_host:
        name: "{{ item.tags.Name }}"
        short_name: "{{ item.tags.short_name }}"
        ansible_host: "{{ item.public_ip_address }}"
        username: "{{ item.tags.Student }}"
        ansible_user: "{{ item.tags.username }}"
        ansible_port: "{{ ssh_port }}"
        ansible_ssh_private_key_file: "{{ playbook_dir }}/{{ec2_name_prefix}}/{{ec2_name_prefix}}-private.pem"
        private_ip: "{{item.private_ip_address}}"
        groups:
          - qradar
          - siem
      loop: "{{ qradar_node_facts.instances|flatten(levels=1) }}"

- name: grab facts for snort node (SECURITY MODE)
  ec2_instance_facts:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_snort": "{{ec2_name_prefix}}-snort"
  register: snort_node_facts

- name: grab facts for Check Point CloudGuard Security Management (SECURITY MODE)
  ec2_instance_facts:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_checkpoint_mgmt": "{{ec2_name_prefix}}-checkpoint"
  register: checkpoint_node_facts

- name: grab facts for Windows workstation for Check Point (SECURITY MODE)
  ec2_instance_facts:
    region: "{{ ec2_region }}"
    filters:
      instance-state-name: running
      "tag:Workshop_windows": "{{ec2_name_prefix}}-windows"
  register: windows_node_facts


- name: ADD SNORT NODE TO INVENTORY
  add_host:
    name: "{{ item.tags.Name }}"
    short_name: "{{ item.tags.short_name }}"
    ansible_host: "{{ item.public_ip_address }}"
    username: "{{ item.tags.Student }}"
    ansible_user: "{{ item.tags.username }}"
    ansible_port: "{{ ssh_port }}"
    ansible_ssh_private_key_file: "{{ playbook_dir }}/{{ec2_name_prefix}}/{{ec2_name_prefix}}-private.pem"
    private_ip: "{{item.private_ip_address}}"
    groups:
      - snort
      - ids
  loop: "{{ snort_node_facts.instances|flatten(levels=1) }}"

- name: ADD Check Point CloudGuard Security Management TO INVENTORY
  add_host:
    name: "{{ item.tags.Name }}"
    short_name: "{{ item.tags.short_name }}"
    ansible_host: "{{ item.public_ip_address }}"
    username: "{{ item.tags.Student }}"
    ansible_user: "{{ item.tags.username }}"
    ansible_port: "{{ ssh_port }}"
    ansible_ssh_private_key_file: "{{ playbook_dir }}/{{ec2_name_prefix}}/{{ec2_name_prefix}}-private.pem"
    private_ip: "{{item.private_ip_address}}"
    groups:
      - checkpoint
      - firewall
  loop: "{{ checkpoint_node_facts.instances|flatten(levels=1) }}"

- name: ADD WINDOWS WORKSTATION TO INVENTORY
  add_host:
    name: "{{ item.tags.Name }}"
    short_name: "{{ item.tags.short_name }}"
    ansible_host: "{{ item.public_ip_address }}"
    ansible_user: Administrator
    ansible_password: RedHat19!
    ansible_port: 5986
    ansible_connection: winrm
    ansible_winrm_server_cert_validation: ignore
    username: "{{ item.tags.Student }}"
    private_ip: "{{item.private_ip_address}}"
    groups:
      - windows
      - workstation
  loop: "{{ windows_node_facts.instances|flatten(levels=1) }}"

- name: Generate student inventories
  template:
    src: security_instances.txt.j2
    dest: "{{ playbook_dir }}/{{ec2_name_prefix}}/student{{item}}-instances.txt"
  with_sequence: count="{{ student_total }}"

- name: Generate instructor inventory
  template:
    src: instructor_inventory_security.j2
    dest: "{{ playbook_dir }}/{{ec2_name_prefix}}/instructor_inventory.txt"
